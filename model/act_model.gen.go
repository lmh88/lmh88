// Code generated by sqlgen. DO NOT EDIT!

package model

import (
	"context"
	"fmt"

	"gorm.io/gorm"
)

// ActModel represents a act model.
type ActModel struct {
	db *gorm.DB
}

// Act represents a act struct data.
type Act struct {
	Id                 int32  `gorm:"column:id;primaryKey;autoIncrement" json:"id"`
	Name               string `gorm:"column:name" json:"name"`                               // 活动名称
	StartTime          int32  `gorm:"column:start_time" json:"startTime"`                    // 活动开始时间
	EndTime            int32  `gorm:"column:end_time" json:"endTime"`                        // 活动结束时间
	CreateTime         int32  `gorm:"column:create_time" json:"createTime"`                  // 创建时间
	Details            string `gorm:"column:details" json:"details"`                         // 活动详情描述（富文本）
	Cover              string `gorm:"column:cover" json:"cover"`                             // 活动封面
	CoverMobile        string `gorm:"column:cover_mobile" json:"coverMobile"`                // 活动封面-移动端
	MissionId          int64  `gorm:"column:mission_id" json:"missionId"`                    // 关联 任务id
	State              int8   `gorm:"column:state" json:"state"`                             // 状态 0-禁用 1-启用
	UpdateTime         int32  `gorm:"column:update_time" json:"updateTime"`                  // 更新时间
	Type               int8   `gorm:"column:type" json:"type"`                               // 活动类型  1-常规活动 2-临时活动 3-预告活动 4-版权收益活动 5-众投活动
	SpecialCover       string `gorm:"column:special_cover" json:"specialCover"`              // 活动专题页封面
	SpecialCoverMobile string `gorm:"column:special_cover_mobile" json:"specialCoverMobile"` // 活动专题页封面-移动端
	Sort               int32  `gorm:"column:sort" json:"sort"`                               // 排序（数字越大越靠前）
	IsVerify           int8   `gorm:"column:is_verify" json:"isVerify"`                      // 是否开启验证（0-不开启 1-开启）
	IsEnroll           int8   `gorm:"column:is_enroll" json:"isEnroll"`                      // 是否开启报名（0-不开启 1-开启）
	EnrollImg          string `gorm:"column:enroll_img" json:"enrollImg"`                    // 报名详情页
	UserId             int64  `gorm:"column:user_id" json:"userId"`                          // 用户uid
}

// TableName returns the table name. it implemented by gorm.Tabler.
func (Act) TableName() string {
	return "act"
}

// NewActModel returns a new act model.
func NewActModel(db *gorm.DB) *ActModel {
	return &ActModel{db: db}
}

// Create creates  act data.
func (m *ActModel) Create(ctx context.Context, data ...*Act) error {
	if len(data) == 0 {
		return fmt.Errorf("data is empty")
	}

	db := m.db.WithContext(ctx)
	list := data[:]
	return db.Create(&list).Error
}
